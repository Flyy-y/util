#!/usr/bin/python3

from subprocess import check_output
from os import path
from json import load
import sys

selfdir = path.dirname(path.realpath(__file__))
example = "/../Makefile"
git = check_output(["git", "pull"], cwd=selfdir)

if "Already up-to-date." not in git.decode("utf-8"):
	print("Updated. Please restart the script", file=sys.stderr)
	exit(0)

with open(selfdir + example, 'r') as makefile_file:
	makefile = makefile_file.read()
	with open(sys.argv[1]) as generator_file:
		generator = load(generator_file)
		makefile = makefile \
			.replace("{target}",	generator.get("target",	"UNDEFINED")) \
			.replace("{library}",	"TRUE" if generator.get("library","FALSE") else "FALSE") \
			.replace("{srcdir}",	generator.get("srcdir",	"srcs")) \
			.replace("{incdir}",	generator.get("incdir",	"includes")) \
			.replace("{builddir}",	generator.get("builddir", "build")) \
			.replace("{tardir}",	generator.get("tardir",	"bin")) \
			.replace("{srcext}",	generator.get("srcext",	"c")) \
			.replace("{objext}",	generator.get("objext",	"o")) \
			.replace("{cc}",		generator.get("cc",		"clang")) \
			.replace("{cflags}",	generator.get("cflags",	"-Wextra -Wall")) \
			.replace("{makedep}",	generator.get("makedep","")) \
			.replace("{lib}",		generator.get("lib",	"")) \
			.replace("{inc}",		generator.get("inc",	"")) \
			.replace("{linker}",	generator.get("linker",	"ar -rcs")) \
			.replace("{rm}",		generator.get("rm",		"rm -rf")) \
			.replace("{mkdir}",		generator.get("mkdir","mkdir -p"))
		print(makefile)
		print("Done !", file=sys.stderr)