# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile_example                                   :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: cbreisch <cbreisch@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2018/02/27 14:18:33 by cbreisch          #+#    #+#              #
#    Updated: 2019/02/09 14:38:46 by cbreisch         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

CPUS		:= {cpus}
MAKEFLAGS	:= {mflags}

NAME		:= {name}
TARGET		:= {target}
LIBRARY		:= {library}

SRCDIR		:= {srcdir}
INCDIR		:= {incdir}
BUILDDIR	:= {builddir}
TARGETDIR	:= {tardir}
SRCEXT		:= {srcext}
OBJEXT		:= {objext}

CC			:= {cc}
CFLAGS		:= {cflags}
MAKEDEP		:= {makedep}
LIB			:= {lib}
INC			:= -I$(INCDIR) {inc}
LINKER		:= {linker}
INDEXER		:= {indexer}
RM			:= {rm}
MKDIR		:= {mkdir}

GENERATOR	:= {generator}
GENCONFIG	:= {genconfig}

SOURCES     := {sources}
OBJECTS     := $(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(SOURCES:.$(SRCEXT)=.$(OBJEXT)))

CUR_COLOR	:= \033[0;93m
COM_COLOR	:= \033[0;94m
OBJ_COLOR	:= \033[0;90m
TAR_COLOR	:= \033[0;92m
OK_COLOR	:= \033[0;32m
ERROR_COLOR	:= \033[0;31m
WARN_COLOR	:= \033[0;33m
NO_COLOR	:= \033[m

OK_STRING	:= "[OK]"
ERROR_STRING:= "[ERROR]"
WARN_STRING	:= "[WARNING]"
COM_STRING	:= "Compiling"
LIN_STRING	:= "Linking"
IND_STRING	:= "Indexing"
DEL_STRING	:= "Deleted"
DEP_STRING	:= "Making"
REG_STRING	:= "Regenerating_Makefile"
ifeq ($(strip $(DEP_LEVEL)),)
	DEP_LEVEL = 0
endif
DEP_LEVEL_STR = $(shell awk 'BEGIN {while (c++<$(DEP_LEVEL)) printf " "}')
PRINTF 		:= printf "%-22b%-55b%b" "$(CUR_COLOR)$(DEP_LEVEL_STR)$(NAME) "



#
#	Rules
#
#Non-File Targets
.PHONY: $(NAME) all re depre clean fclean depfclean norm normcheck depfclean

$(NAME): all

all: | $(MAKEDEP) $(OBJECTS)
	@$(MAKE) $(TARGETDIR)/$(TARGET) --no-print-directory

re:
	@$(MAKE) fclean --no-print-directory
	@$(MAKE) all --no-print-directory

depre: depfclean
	@$(MAKE) re --no-print-directory

clean: #Delete build directory
	@$(RM) $(OBJECTS) $(BUILDDIR) 2> /dev/null | true
	@$(PRINTF) "$(COM_COLOR)$(DEL_STRING)$(TAR_COLOR) build files" "$(OK_COLOR)$(OK_STRING)$(NO_COLOR)\n";

fclean: clean #Delete build and target directories
	@$(RM) $(TARGETDIR)/$(TARGET) $(TARGETDIR)/$(TARGET).dSYM $(TARGETDIR) 2> /dev/null | true
	@$(PRINTF) "$(COM_COLOR)$(DEL_STRING)$(TAR_COLOR) binary files" "$(OK_COLOR)$(OK_STRING)$(NO_COLOR)\n";

depfclean: fclean
	@for dir in $(MAKEDEP); do \
		$(MAKE) --no-print-directory -C $$dir depfclean DEP_LEVEL=$$(($(DEP_LEVEL)+2)); \
	done

norm:
	@norminette $(SOURCES) $(INCDIR)/*.h

normcheck:
	@echo "$(shell norminette $(SOURCES) $(INCDIR)/*.h | grep -E '^(Error|Warning)')" Norme check OK

regen:
	@$(GENERATOR) $(GENCONFIG) Makefile 2> regen.log; \
		RESULT=$$?; \
		if [ $$RESULT -ne 0 ]; then \
			$(PRINTF) "$(COM_COLOR)$(REG_STRING)$(OBJ_COLOR)" "$(ERROR_COLOR)$(ERROR_STRING)$(NO_COLOR)\n"; \
		elif [ -s regen.log ]; then \
			$(PRINTF) "$(COM_COLOR)$(REG_STRING)$(OBJ_COLOR)" "$(WARN_COLOR)$(WARN_STRING)$(NO_COLOR)\n"; \
		else  \
			$(PRINTF) "$(COM_COLOR)$(REG_STRING)$(OBJ_COLOR)" "$(OK_COLOR)$(OK_STRING)$(NO_COLOR)\n"; \
		fi; \
		cat regen.log; \
		rm -f regen.log; \
		exit $$RESULT
	@for dir in $(MAKEDEP); do \
		$(MAKE) --no-print-directory -C $$dir regen DEP_LEVEL=$$(($(DEP_LEVEL)+2)); \
	done




#
#	LINKING
#
.PHONY: $(MAKEDEP)
ifeq ($(LIBRARY), FALSE)
$(TARGETDIR)/$(TARGET): $(OBJECTS)
	@$(MKDIR) $(dir $@)
	@$(CC) $(CFLAGS) $(INC) -o $(TARGETDIR)/$(TARGET) $^ $(LIB) 2> $@.log; \
		RESULT=$$?; \
		if [ $$RESULT -ne 0 ]; then \
			$(PRINTF) "$(COM_COLOR)$(LIN_STRING)$(TAR_COLOR) $@" "$(ERROR_COLOR)$(ERROR_STRING)$(NO_COLOR)\n"; \
		elif [ -s $@.log ]; then \
			$(PRINTF) "$(COM_COLOR)$(LIN_STRING)$(TAR_COLOR) $@" "$(WARN_COLOR)$(WARN_STRING)$(NO_COLOR)\n"; \
		else  \
			$(PRINTF) "$(COM_COLOR)$(LIN_STRING)$(TAR_COLOR) $@" "$(OK_COLOR)$(OK_STRING)$(NO_COLOR)\n"; \
		fi; \
		cat $@.log; \
		rm -f $@.log; \
		exit $$RESULT
else
$(TARGETDIR)/$(TARGET): $(OBJECTS)
	@$(MKDIR) $(dir $@)
	@$(LINKER) $(TARGETDIR)/$(TARGET) $^ 2> $@.log; \
		RESULT=$$?; \
		if [ $$RESULT -ne 0 ]; then \
			$(PRINTF) "$(COM_COLOR)$(LIN_STRING)$(TAR_COLOR) $@" "$(ERROR_COLOR)$(ERROR_STRING)$(NO_COLOR)\n"; \
		elif [ -s $@.log ]; then \
			$(PRINTF) "$(COM_COLOR)$(LIN_STRING)$(TAR_COLOR) $@" "$(WARN_COLOR)$(WARN_STRING)$(NO_COLOR)\n"; \
		else  \
			$(PRINTF) "$(COM_COLOR)$(LIN_STRING)$(TAR_COLOR) $@" "$(OK_COLOR)$(OK_STRING)$(NO_COLOR)\n"; \
		fi; \
		cat $@.log; \
		rm -f $@.log; \
		exit $$RESULT
	@$(INDEXER) $(TARGETDIR)/$(TARGET) 2> $@.log; \
		RESULT=$$?; \
		if [ $$RESULT -ne 0 ]; then \
			$(PRINTF) "$(COM_COLOR)$(IND_STRING)$(TAR_COLOR) $@" "$(ERROR_COLOR)$(ERROR_STRING)$(NO_COLOR)\n"; \
		elif [ -s $@.log ]; then \
			$(PRINTF) "$(COM_COLOR)$(IND_STRING)$(TAR_COLOR) $@" "$(WARN_COLOR)$(WARN_STRING)$(NO_COLOR)\n"; \
		else  \
			$(PRINTF) "$(COM_COLOR)$(IND_STRING)$(TAR_COLOR) $@" "$(OK_COLOR)$(OK_STRING)$(NO_COLOR)\n"; \
		fi; \
		cat $@.log; \
		rm -f $@.log; \
		exit $$RESULT
endif





#
#	OBJECTS BUILDING
#
$(BUILDDIR)/%.$(OBJEXT): $(SRCDIR)/%.$(SRCEXT)
	@$(MKDIR) $(dir $@)
	@$(CC) $(CFLAGS) $(INC) -c -o $@ $< 2> $@.log; \
		RESULT=$$?; \
		if [ $$RESULT -ne 0 ]; then \
			$(PRINTF) "$(COM_COLOR)$(COM_STRING)$(OBJ_COLOR) $@" "$(ERROR_COLOR)$(ERROR_STRING)$(NO_COLOR)\n"; \
		elif [ -s $@.log ]; then \
			$(PRINTF) "$(COM_COLOR)$(COM_STRING)$(OBJ_COLOR) $@" "$(WARN_COLOR)$(WARN_STRING)$(NO_COLOR)\n"; \
		else  \
			$(PRINTF) "$(COM_COLOR)$(COM_STRING)$(OBJ_COLOR) $(@F)" "$(OK_COLOR)$(OK_STRING)$(NO_COLOR)\n"; \
		fi; \
		cat $@.log; \
		rm -f $@.log; \
		exit $$RESULT



$(MAKEDEP):
	@$(MAKE) -s -C $@ DEP_LEVEL=$$(($(DEP_LEVEL)+2)) 2> $@.log; \
	RESULT=$$?; \
	if [ $$RESULT -ne 0 ]; then \
		$(PRINTF) "$(COM_COLOR)$(DEP_STRING)$(OBJ_COLOR) $@" "$(ERROR_COLOR)$(ERROR_STRING)$(NO_COLOR)\n"; \
	elif [ -s $@.log ]; then \
		$(PRINTF) "$(COM_COLOR)$(DEP_STRING)$(OBJ_COLOR) $@" "$(WARN_COLOR)$(WARN_STRING)$(NO_COLOR)\n"; \
	fi; \
	cat $@.log; \
	rm -f $@.log; \
	exit $$RESULT

